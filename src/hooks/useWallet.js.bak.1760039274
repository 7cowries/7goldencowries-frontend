import { TonConnectUI, THEME } from '@tonconnect/ui';

let _tcui;
let _unsubscribe = null;
// Keep the latest wallet/account object here so components can read it
let _lastWallet = null;

/**
 * Ensure a single TonConnectUI instance and start tracking status changes.
 */
export function ensureTonUI(manifestUrl = '/tonconnect-manifest.json', theme = THEME.DARK) {
  if (!_tcui) {
    _tcui = new TonConnectUI({ manifestUrl, theme });
    // Subscribe once and cache the latest wallet/account
    _unsubscribe = _tcui.onStatusChange((wallet) => {
      _lastWallet = wallet || null;
    });
  }
  return _tcui;
}

/**
 * Open the TonConnect modal and resolve once a wallet is connected.
 */
export async function connectWallet(manifestUrl = '/tonconnect-manifest.json') {
  const ui = ensureTonUI(manifestUrl);
  ui.openModal();

  return new Promise((resolve) => {
    const off = ui.onStatusChange((wallet) => {
      if (wallet) {
        off(); // stop this one-time waiter
        _lastWallet = wallet;
        resolve(wallet);
      }
    });
  });
}

/**
 * Disconnect the current wallet and clear local cache.
 */
export function disconnectWallet() {
  if (_tcui) {
    _tcui.disconnect();
  }
  if (_unsubscribe) {
    _unsubscribe();
    _unsubscribe = null;
  }
  _lastWallet = null;
}

/**
 * Return the latest cached wallet/account (async for compatibility).
 */
export async function getWalletAccount() {
  return _lastWallet;
}

/**
 * Compatibility hook so legacy code `import useWallet from '../hooks/useWallet'`
 * continues to work without @tonconnect/ui-react.
 */
export function walletHookInternal() {
  return {
    wallet: _lastWallet,
    address: _lastWallet?.account?.address,
    connected: !!_lastWallet,
    connect: (manifestUrl) => connectWallet(manifestUrl),
    disconnect: () => disconnectWallet(),
    ensure: (manifestUrl) => ensureTonUI(manifestUrl),
    getWalletAccount,
  };
}

// Keep default export for any default imports that may exist.
export default ensureTonUI;

export const connect = (manifestUrl) => connectWallet(manifestUrl);
export const disconnect = () => disconnectWallet();

/**
 * Back-compat helper so existing code like:
 *   const { connect } = useWallet();
 * continues to work even after refactor to named exports.
 */
export default function useWallet() {
  return { connect, disconnect, ensureTonUI, getWalletAccount };
}
